/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/router';


import {
  FirebaseStencil as FirebaseStencil
} from './components/firebase-stencil/firebase-stencil';

declare global {
  interface HTMLFirebaseStencilElement extends FirebaseStencil, HTMLElement {
  }
  var HTMLFirebaseStencilElement: {
    prototype: HTMLFirebaseStencilElement;
    new (): HTMLFirebaseStencilElement;
  };
  interface HTMLElementTagNameMap {
    "firebase-stencil": HTMLFirebaseStencilElement;
  }
  interface ElementTagNameMap {
    "firebase-stencil": HTMLFirebaseStencilElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "firebase-stencil": JSXElements.FirebaseStencilAttributes;
    }
  }
  namespace JSXElements {
    export interface FirebaseStencilAttributes extends HTMLAttributes {
      
        config?: Object
    }
  }
}


import {
  MyAvatar as MyAvatar
} from './components/my-avatar/my-avatar';

declare global {
  interface HTMLMyAvatarElement extends MyAvatar, HTMLElement {
  }
  var HTMLMyAvatarElement: {
    prototype: HTMLMyAvatarElement;
    new (): HTMLMyAvatarElement;
  };
  interface HTMLElementTagNameMap {
    "my-avatar": HTMLMyAvatarElement;
  }
  interface ElementTagNameMap {
    "my-avatar": HTMLMyAvatarElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-avatar": JSXElements.MyAvatarAttributes;
    }
  }
  namespace JSXElements {
    export interface MyAvatarAttributes extends HTMLAttributes {
      
        userImage?: string,
        userName?: string
    }
  }
}


import {
  MyInputTask as MyInputTask
} from './components/my-input-task/my-input-task';

declare global {
  interface HTMLMyInputTaskElement extends MyInputTask, HTMLElement {
  }
  var HTMLMyInputTaskElement: {
    prototype: HTMLMyInputTaskElement;
    new (): HTMLMyInputTaskElement;
  };
  interface HTMLElementTagNameMap {
    "my-input-task": HTMLMyInputTaskElement;
  }
  interface ElementTagNameMap {
    "my-input-task": HTMLMyInputTaskElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-input-task": JSXElements.MyInputTaskAttributes;
    }
  }
  namespace JSXElements {
    export interface MyInputTaskAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  MyTodoList as MyTodoList
} from './components/my-todo-list/my-todo-list';

declare global {
  interface HTMLMyTodoListElement extends MyTodoList, HTMLElement {
  }
  var HTMLMyTodoListElement: {
    prototype: HTMLMyTodoListElement;
    new (): HTMLMyTodoListElement;
  };
  interface HTMLElementTagNameMap {
    "my-todo-list": HTMLMyTodoListElement;
  }
  interface ElementTagNameMap {
    "my-todo-list": HTMLMyTodoListElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-todo-list": JSXElements.MyTodoListAttributes;
    }
  }
  namespace JSXElements {
    export interface MyTodoListAttributes extends HTMLAttributes {
      
    }
  }
}

